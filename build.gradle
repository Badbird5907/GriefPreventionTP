plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}
group = 'dev.badbird'
version = '3.1.0'

def jarName = "GriefPreventionTP-${version}"

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'papermc-repo'
        url = 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'jitpack-repo'
        url = 'https://jitpack.io'
    }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.opencollab.dev/maven-snapshots/' }
}
configurations {
    impl
}
dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'com.github.TechFortress:GriefPrevention:16.18'

    impl 'net.badbird5907:bLib-Bukkit:2.1.11-REL'
    impl 'net.octopvp:Commander-Bukkit:0.0.3-REL'
    impl 'net.kyori:adventure-text-minimessage:4.10.1'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly "org.geysermc.floodgate:api:2.2.0-SNAPSHOT"

    implementation "net.kyori:adventure-platform-bukkit:4.2.0"
    configurations.impl.dependencies.each {
        implementation(it)
    }
}
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
/*
tasks.withType(JavaCompile).configureEach {
    /*
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
    options.release = 17
}
     */

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    /*
    from {
        configurations.impl.collect { it.isDirectory() ? it : zipTree(it) }
    }
     */
    archiveBaseName = jarName + '-original.jar'
}
jar.dependsOn(project.tasks.shadowJar)
shadowJar {
    relocate 'net.badbid5907.blib', 'dev.badbird.griefpreventiontp.dependencies'
    relocate 'net.octopvp', 'dev.badbird.griefpreventiontp.dependencies'
    //relocate 'net.kyori', 'dev.badbird.griefpreventiontp.dependencies'
    //relocate 'org', 'dev.badbird.griefpreventiontp.dependencies'
    //relocate 'javax', 'dev.badbird.griefpreventiontp.dependencies.javax'
    //relocate 'javaassist', 'dev.badbird.griefpreventiontp.dependencies.javaassist'
    //relocate 'com.google', 'dev.badbird.griefpreventiontp.dependencies'
    exclude '*.lombok'
    archiveName(jarName + '.jar')
}
task copyPlugin(type: Copy) {
    from 'build/libs/' + jarName + '.jar'
    into 'run/plugins'
}
copyPlugin.dependsOn(project.tasks.shadowJar)
task runDev(type: JavaExec) {
    classpath = files('run/paper.jar')
    //run the serverJar, main from MANIFEST.MF
    //args('nogui')
    workingDir(file('run'))
}
runDev.dependsOn(project.tasks.copyPlugin)
